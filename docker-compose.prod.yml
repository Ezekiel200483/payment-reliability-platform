# üè≠ Docker Compose Configuration for Production Environment
# Extends the base docker-compose.yml with production-specific settings

version: '3.8'

services:
  payment-service:
    restart: always
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - METRICS_ENABLED=true
      - JAEGER_ENABLED=true
      - SENTRY_ENABLED=true
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    labels:
      - "deployment.environment=production"
      - "deployment.version=${IMAGE_TAG:-latest}"

  postgres:
    restart: always
    environment:
      - POSTGRES_DB=payments_prod
      - POSTGRES_USER=payments_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secure_prod_password}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  redis:
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M

  prometheus:
    restart: always
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--log.level=warn'

  grafana:
    restart: always
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-secure_admin_password}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_ANALYTICS_REPORTING_ENABLED=false
